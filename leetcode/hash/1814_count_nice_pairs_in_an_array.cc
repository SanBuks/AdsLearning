#include <iostream>
#include <unordered_map>
#include <vector>

using namespace std;

class Solution {
public:
  static int countNicePairs(vector<int> &nums) {
    long long sum = 0;

    unordered_map<int, long long> frequency;

    for (auto &item : nums) {
      item = item - ReverseInt(item);
      if (frequency.find(item) != frequency.end()) {
        ++frequency[item];
      } else {
        frequency[item] = 1;
      }
    }

    for (const auto &item : frequency) {
      sum += item.second * (item.second - 1) / 2;
    }

    return static_cast<int>(sum % (1000000007LL));
  }

  static int ReverseInt(int n) {
    int m = n % 10;
    n /= 10;
    while (n) {
      m = m * 10 + n % 10;
      n /= 10;
    }
    return m;
  }
};

int main() {
  vector<int> vec
      {8047408, 192867140, 497837845, 279787822, 151999002, 168514912,
       193424242, 399636844, 132424231, 476736524, 267958611, 493350382,
       476382727, 232939232, 197000791, 295291645, 126313621, 374645524,
       7956597, 1376731, 496463745, 234481430, 359130803, 287625836, 250572050,
       42311324, 477434624, 493231448, 493231244, 150494051, 184645534,
       365252413, 495764582, 335976531, 384564332, 377151623, 198736741,
       335161533, 245552540, 194897341, 83911938, 220562020, 496645745,
       287151782, 374635526, 372483324, 485101584, 271797172, 244949442,
       254333303, 251635002, 459181805, 472392123, 241350140, 256121502,
       336895621, 354635302, 358909704, 194525491, 3606063, 194150341, 63477436,
       341936141, 60299206, 69811896, 369928813, 229926920, 435310522,
       299542980, 463777364, 164534512, 305885501, 437181734, 74288247,
       487281835, 171161022, 423966312, 496989544, 452633252, 252433101,
       141565141, 315895501, 478897927, 232532230, 472451262, 160504114,
       476666674, 6179716, 251483002, 474777474, 443532332, 475808424,
       457514604, 400936002, 384878483, 172616122, 283292232, 165645615,
       392000144, 378636873};
//  vector<int> vec{42, 11, 1, 97};
//  vector<int> vec{13,10,35,24,76};
  std::cout << Solution::countNicePairs(vec) << "\n";
  return 0;
}